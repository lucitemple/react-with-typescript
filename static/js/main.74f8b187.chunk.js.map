{"version":3,"sources":["components/List.tsx","components/AddToList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","people","map","person","className","src","url","alt","name","age","note","AddToList","setPeople","useState","img","input","setInput","handleChange","event","target","value","type","placeholder","onChange","onClick","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAqBeA,EAlBgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAehC,OAAO,6BAbEA,EAAOC,KAAI,SAACC,GACjB,OACE,qBAAIC,UAAU,OAAd,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,WAAWC,IAAKF,EAAOG,IAAKC,IAAI,KAC/C,6BAAKJ,EAAOK,UAEd,8BAAIL,EAAOM,IAAX,gBACA,mBAAGL,UAAU,YAAb,SAA0BD,EAAOO,gB,qBCwE5BC,EA9EqB,SAAC,GAAwC,IAAtCV,EAAqC,EAArCA,OAAQW,EAA6B,EAA7BA,UAC7C,EAA0BC,mBAAS,CACjCL,KAAM,GACNC,IAAK,GACLC,KAAM,GACNI,IAAK,KAJP,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAe,SACnBC,GAEAF,EAAS,2BACJD,GADG,kBAELG,EAAMC,OAAOX,KAAOU,EAAMC,OAAOC,UAyBtC,OACE,sBAAKhB,UAAU,YAAf,UACE,uBACEiB,KAAK,OACLC,YAAY,OACZlB,UAAU,kBACVgB,MAAOL,EAAMP,KACbe,SAAUN,EACVT,KAAK,SAEP,uBACEa,KAAK,SACLC,YAAY,MACZlB,UAAU,kBACVgB,MAAOL,EAAMN,IACbc,SAAUN,EACVT,KAAK,QAEP,uBACEa,KAAK,OACLC,YAAY,YACZlB,UAAU,kBACVgB,MAAOL,EAAMD,IACbS,SAAUN,EACVT,KAAK,QAEP,0BACEc,YAAY,QACZlB,UAAU,kBACVgB,MAAOL,EAAML,KACba,SAAUN,EACVT,KAAK,SAEP,wBAAQJ,UAAU,gBAAgBoB,QAtDlB,WACbT,EAAMP,MAASO,EAAMN,KAAQM,EAAMD,MAGxCF,EAAU,GAAD,mBACJX,GADI,CAEP,CACEO,KAAMO,EAAMP,KACZC,IAAKgB,SAASV,EAAMN,KACpBH,IAAKS,EAAMD,IACXJ,KAAMK,EAAML,SAGhBM,EAAS,CACPR,KAAM,GACNC,IAAK,GACLC,KAAM,GACNI,IAAK,OAqCL,6BC7CSY,MAnBf,WACE,MAA4Bb,mBAA2B,CACrD,CACEL,KAAM,eACNF,IAAK,uFACLG,IAAK,GACLC,KAAM,+BALV,mBAAOT,EAAP,KAAeW,EAAf,KASA,OACE,sBAAKR,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,CAAMH,OAAQA,IACd,cAAC,EAAD,CAAWA,OAAQA,EAAQW,UAAWA,QCd7Be,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74f8b187.chunk.js","sourcesContent":["import React from \"react\";\nimport { IState as IProps} from \"../App\"\n\nconst List: React.FC<IProps> = ({ people }) => {\n  const renderList = (): JSX.Element[] => {\n    return people.map((person) => {\n      return (\n        <li className=\"List\">\n          <div className=\"List-header\">\n            <img className=\"List-img\" src={person.url} alt=\"\" />\n            <h2>{person.name}</h2>\n          </div>\n          <p>{person.age} years old</p>\n          <p className=\"List-note\">{person.note}</p>\n        </li>\n      );\n    });\n  };\n  return <ul>{renderList()}</ul>;\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport { IState as Props } from \"../App\";\ninterface IProps {\n  people: Props[\"people\"];\n  setPeople: React.Dispatch<React.SetStateAction<Props[\"people\"]>>;\n}\n\nconst AddToList: React.FC<IProps> = ({ people, setPeople }): JSX.Element => {\n  const [input, setInput] = useState({\n    name: \"\",\n    age: \"\",\n    note: \"\",\n    img: \"\",\n  });\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    setInput({\n      ...input,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleClick = (): void => {\n    if (!input.name || !input.age || !input.img) {\n      return;\n    }\n    setPeople([\n      ...people,\n      {\n        name: input.name,\n        age: parseInt(input.age),\n        url: input.img,\n        note: input.note,\n      },\n    ]);\n    setInput({\n      name: \"\",\n      age: \"\",\n      note: \"\",\n      img: \"\",\n    });\n  };\n\n  return (\n    <div className=\"AddToList\">\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        className=\"AddToList-input\"\n        value={input.name}\n        onChange={handleChange}\n        name=\"name\"\n      ></input>\n      <input\n        type=\"number\"\n        placeholder=\"Age\"\n        className=\"AddToList-input\"\n        value={input.age}\n        onChange={handleChange}\n        name=\"age\"\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"Image URL\"\n        className=\"AddToList-input\"\n        value={input.img}\n        onChange={handleChange}\n        name=\"img\"\n      ></input>\n      <textarea\n        placeholder=\"Notes\"\n        className=\"AddToList-input\"\n        value={input.note}\n        onChange={handleChange}\n        name=\"note\"\n      />\n      <button className=\"AddToList-btn\" onClick={handleClick}>\n        Add to list\n      </button>\n    </div>\n  );\n};\n\nexport default AddToList;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport AddToList from \"./components/AddToList\"\n\nexport interface IState {\n  people: {\n    name: string;\n    url: string;\n    age: number;\n    note?: string;\n  }[];\n}\n\nfunction App() {\n  const [people, setPeople] = useState<IState[\"people\"]>([\n    {\n      name: \"Ada Lovelace\",\n      url: \"https://daily.jstor.org/wp-content/uploads/2019/10/ada_lovelace_pioneer_1050x700.jpg\",\n      age: 36,\n      note: \"First computer programmer\",\n    },\n  ]);\n\n  return (\n    <div className=\"App\">\n      <h1>People Invited To My Party</h1>\n      <List people={people}/>\n      <AddToList people={people} setPeople={setPeople} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}